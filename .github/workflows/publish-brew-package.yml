name: Publish BREW package

on:
  workflow_call:
    inputs:
      HZ_VERSION:
        description: 'Version of Hazelcast to build the image for, this is the Maven version - e.g.: 5.0.2 or 5.1-SNAPSHOT'
        required: true
        type: string
      HZ_DISTRIBUTION:
        description: 'Distribution to be built: hazelcast or hazelcast-enterprise'
        required: true
        type: string
      PACKAGE_VERSION:
        description: 'Version of the package e.g. 5.1.1, 5.1.1-1, defaults to HZ_VERSION'
        type: string
      ENVIRONMENT:
        description: 'Environment to use'
        required: true
        type: string
      JAVA_VERSION:
        description: 'Java version to use'
        required: true
        type: string

env:
  JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
  JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}
  ENVIRONMENT: ${{ inputs.ENVIRONMENT }}

concurrency:
  group: 'brew-${{ github.job }}-${{ inputs.HZ_VERSION }}-${{ inputs.HZ_DISTRIBUTION}}'

jobs:
  homebrew:
    environment: ${{ inputs.ENVIRONMENT }}
    runs-on: macos-latest
    env:
      HZ_VERSION: ${{ inputs.HZ_VERSION }}
      PACKAGE_VERSION: ${{ inputs.PACKAGE_VERSION || inputs.HZ_VERSION }}
      HZ_DISTRIBUTION: ${{ inputs.HZ_DISTRIBUTION }}
    steps:
      - name: Checkout hazelcast-packaging repo
        uses: actions/checkout@v5

      - name: Checkout hazelcast-docker repo
        uses: actions/checkout@v5
        with:
          repository: hazelcast/hazelcast-docker
          path: 'hazelcast-docker'

      - name: Install up-to-date tools
        run: |
          brew install gnu-sed
          brew install coreutils

          PATH="$HOMEBREW_PREFIX/opt/gnu-sed/libexec/gnubin:$PATH"
          sed --version
          PATH="$HOMEBREW_PREFIX/opt/coreutils/libexec/gnubin:$PATH"
          sha256sum --version
          echo "PATH=$HOMEBREW_PREFIX/opt/coreutils/libexec/gnubin:$HOMEBREW_PREFIX/opt/gnu-sed/libexec/gnubin:$PATH" >> $GITHUB_ENV

      - name: Download the distribution file
        uses: hazelcast/docker-actions/download-hz-dist@share-distribution-download
        id: download-hz-dist
        with:
          repo-vars-as-json: ${{ toJSON(vars) }}
          distribution: ${{ env.HZ_DISTRIBUTION }}
          hz_version: ${{ env.HZ_VERSION }}
          packaging: "tar.gz"
          output_file: "distribution.tar.gz"

      - name: Get the distribution file URL
        id: hz-dist-url
        run: |
          # Detect if the repo definition specifies authentication via a Maven server (e.g. "my-private-repo::::https://example.com/private-repo")
          if [[ "${{ steps.download-hz-dist.outputs.maven_repo_url }}" == *[!:]::::* ]]; then
            echo "Distribution URL requires authentication, aborting!";
            exit 1;
          else
            echo "url=${{ steps.download-hz-dist.outputs.maven_repo_url }}/com/hazelcast/${HZ_DISTRIBUTION}-distribution/${HZ_VERSION}/${HZ_DISTRIBUTION}-distribution-${HZ_VERSION}.tar.gz" >> ${GITHUB_OUTPUT}
          fi

      - name: Get homebrew repository
        run: |
          source ./common.sh
          echo "BREW_GIT_REPO_NAME=${BREW_GIT_REPO_NAME}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_DEV_INFRA_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_INFRA_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Get Secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            GITHUB/DEVOPSHAZELCAST
          parse-json-secrets: true

      - name: Checkout homebrew-hz repo
        uses: actions/checkout@v5
        with:
          repository: ${{ env.BREW_GIT_REPO_NAME }}
          token: ${{ env.GITHUB_DEVOPSHAZELCAST_SECRET }}
          path: 'homebrew-hz'

      - name: Change the artifact in homebrew-hz
        run: |
          ./build-hazelcast-homebrew-package.sh
        env:
          HZ_PACKAGE_URL: ${{ steps.hz-dist-url.outputs.url }}
          JAVA_VERSION: ${{ inputs.JAVA_VERSION }}

      - name: Commit changes & Push to homebrew-hz repo
        run: |
          source common.sh

          cd homebrew-hz
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add *.rb
          if [[ `git status --porcelain --untracked-files=no` ]]; then
            git commit -am "Hazelcast Homebrew Package ${{ env.PACKAGE_VERSION }} release"
            git pull --rebase
            git push
          else
            echo "No changes, this is probably a re-run."
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          aws-access-key-id: ${{ secrets.AWS_DEV_INFRA_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_INFRA_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      - name: Install Hazelcast from Homebrew
        run: |
          source ./common.sh
          # Add a GitHub token be able to use a homebrew tap from the private repository
          git config --global url."https://${{ env.GITHUB_DEVOPSHAZELCAST_SECRET }}@github.com/".insteadOf "https://github.com/"

          brew tap ${BREW_TAP_NAME}
          brew install ${{ env.HZ_DISTRIBUTION}}@$BREW_PACKAGE_VERSION

      - name: Run Hazelcast
        env:
          HZ_LICENSEKEY: ${{ secrets.HAZELCAST_ENTERPRISE_KEY }}
        run: HAZELCAST_CONFIG="$(pwd)/config/integration-test-hazelcast.yaml" hz-start > hz.log 2>&1 &

      - name: Check Hazelcast health
        run: |
          ./check-hazelcast-health.sh "${{ env.HZ_DISTRIBUTION}}" "${{ env.HZ_VERSION}}"

      - name: Uninstall Hazelcast from homebrew
        run: |
          source ./common.sh          
          brew uninstall ${{ env.HZ_DISTRIBUTION}}@$BREW_PACKAGE_VERSION

      - name: Store logs as artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: brew-${{ env.HZ_DISTRIBUTION}}-hz.log
          path: hz.log