name: Publish DEB package

on:
  workflow_call:
    inputs:
      HZ_VERSION:
        description: 'Version of Hazelcast to build the image for, this is the Maven version - e.g.: 5.0.2 or 5.1-SNAPSHOT'
        required: true
        type: string
      HZ_DISTRIBUTION:
        description: 'Distribution to be built: hazelcast or hazelcast-enterprise'
        required: true
        type: string
      USE_TEST_REPO:
        description: 'Use test repo for publishing'
        required: true
        type: string
      PACKAGE_VERSION:
        description: 'Version of the package e.g. 5.1.1, 5.1.1-1, defaults to HZ_VERSION'
        type: string

env:
  JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
  JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}

concurrency:
  group: 'deb-${{ github.job }}-${{ inputs.HZ_VERSION }}-${{ inputs.HZ_DISTRIBUTION}}'

jobs:
  deb:
    runs-on: ubuntu-latest
    container:
      image: debian:stable
    defaults:
      run:
        shell: bash
    env:
      HZ_VERSION: ${{ inputs.HZ_VERSION }}
      PACKAGE_VERSION: ${{ inputs.PACKAGE_VERSION || inputs.HZ_VERSION }}
      HZ_DISTRIBUTION: ${{ inputs.HZ_DISTRIBUTION }}
      USE_TEST_REPO: ${{ inputs.USE_TEST_REPO }}

    steps:
      - name: Checkout hazelcast-packaging repo
        uses: actions/checkout@v4

      - name: Install prerequisites
        run: |
          apt-get update
          apt-get install -y curl gettext-base gpg sudo wget

      - name: Download the distribution tar.gz file
        env:
          HZ_SNAPSHOT_INTERNAL_PASSWORD: ${{ secrets.HZ_SNAPSHOT_INTERNAL_PASSWORD }}
          HZ_SNAPSHOT_INTERNAL_USERNAME: ${{ secrets.HZ_SNAPSHOT_INTERNAL_USERNAME }}
        run: |
          . .github/workflows/build.functions.sh
          DISTRIBUTION_URL=$(get_hz_dist_tar_gz "${HZ_VERSION}" "${HZ_DISTRIBUTION}")
          curl --fail --silent --show-error --location "$DISTRIBUTION_URL" --output distribution.tar.gz 

      - name: Create & Upload DEB package
        run: |
          ./build-hazelcast-deb-package.sh

      - name: Calculate Debian Repository Metadata
        run: |
          source common.sh

          curl --fail-with-body --retry 3 --retry-delay 10 -H "Authorization: Bearer ${{ env.JFROG_TOKEN }}" \
            -X POST "https://repository.hazelcast.com/api/deb/reindex/${DEBIAN_REPO}"

      - name: Install Hazelcast from deb
        env:
          HZ_LICENSEKEY: ${{ secrets.HZ_LICENSEKEY }}
        run: |
          source ./common.sh
          wget \
            https://repository.hazelcast.com/api/gpg/key/public \
            --header "Authorization: Bearer ${{ env.JFROG_TOKEN }}" \
            --output-document - \
            --quiet \
            | gpg --dearmor \
            | sudo tee /usr/share/keyrings/hazelcast-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/hazelcast-archive-keyring.gpg] ${DEBIAN_REPO_BASE_URL} ${PACKAGE_REPO} main" | sudo tee -a /etc/apt/sources.list
          sudo apt-get update && sudo apt-get install ${{ env.HZ_DISTRIBUTION }}=${HZ_VERSION}
          HAZELCAST_CONFIG="$(pwd)/config/integration-test-hazelcast.yaml" hz-start > hz.log 2>&1 &

      - name: Check Hazelcast health
        run: |
          ./check-hazelcast-health.sh "${{ env.HZ_DISTRIBUTION}}" "${{ env.HZ_VERSION}}"

      - name: Uninstall Hazelcast from deb
        run: |
          source ./common.sh
          sudo apt-get remove ${{ env.HZ_DISTRIBUTION}}

      - name: Remove deb package from test repo
        if: ${{ env.USE_TEST_REPO == 'true' && (success() || failure()) }}
        run: |
          source ./common.sh
          curl -H "Authorization: Bearer ${{ env.JFROG_TOKEN }}" \
            -X DELETE \
            "$DEBIAN_REPO_BASE_URL/${HZ_DISTRIBUTION}-${DEB_PACKAGE_VERSION}-all.deb"

      - name: Store logs as artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: deb-${{ env.HZ_DISTRIBUTION}}-hz.log
          path: hz.log