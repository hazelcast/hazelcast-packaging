name: Publish Hazelcast OS & EE packages

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    types: [ opened, synchronize, edited ]
  workflow_dispatch:
    inputs:
      PACKAGE_TYPES:
        description: 'Packages to build'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - deb
        - rpm
        - homebrew
      EDITIONS:
        description: 'Editions to build'
        required: true
        default: 'EE'
        type: choice
        options:
          - All
          - OSS
          - EE

env:
  EVENT_NAME: ${{ github.event_name }}

# Constant for now - should ensure single build, maybe we can limit this to something from github.*
concurrency: single-build

jobs:
  prepare:
    runs-on: ubuntu-latest
    env:
      EDITIONS: ${{ inputs.EDITIONS || 'EE' }}
      PACKAGE_TYPES: ${{ inputs.PACKAGE_TYPES || 'all' }}
    outputs:
      hz_version_ee: ${{ steps.hz_version_step.outputs.hz_version_ee }}
      hz_version_oss: ${{ steps.hz_version_step.outputs.hz_version_oss }}
      should_build_oss: ${{ steps.should_build_oss_step.outputs.should_build_oss }}
      should_build_ee: ${{ steps.should_build_ee_step.outputs.should_build_ee }}
      should_build_deb: ${{ env.PACKAGE_TYPES == 'all' || env.PACKAGE_TYPES == 'deb' }}
      should_build_rpm: ${{ env.PACKAGE_TYPES == 'all' || env.PACKAGE_TYPES == 'rpm' }}
      should_build_homebrew: ${{ env.PACKAGE_TYPES == 'all' || env.PACKAGE_TYPES == 'homebrew' }}
      use_test_repo: ${{ env.EVENT_NAME == 'pull_request' }}
    steps:
      - name: Checkout hazelcast-packaging repo
        uses: actions/checkout@v4

      - name: Load env vars from .env file
        run: cat .env >> $GITHUB_ENV

      - name: Test scripts
        run: |
          .github/workflows/test_scripts.sh

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Set HZ_VERSION
        id: hz_version_step
        run: |
          HZ_VERSION_EE=$(cat hazelcast-enterprise.version)
          echo "HZ_VERSION_EE=$HZ_VERSION_EE" >> $GITHUB_ENV
          echo "hz_version_ee=$HZ_VERSION_EE" >> $GITHUB_OUTPUT
          HZ_VERSION_OSS=$(cat hazelcast.version)
          echo "HZ_VERSION_OSS=$HZ_VERSION_OSS" >> $GITHUB_ENV
          echo "hz_version_oss=$HZ_VERSION_OSS" >> $GITHUB_OUTPUT

      - name: Check if OSS should be built
        id: should_build_oss_step
        run: |
          . .github/workflows/build.functions.sh
          
          hz_version_oss=${{ env.HZ_VERSION_OSS }}
          hz_version_ee=${{ env.HZ_VERSION_EE }}
          editions=${{ env.EDITIONS }}
          triggered_by=${{ env.EVENT_NAME }}
          
          should_build_oss=$(should_build_oss "$hz_version_oss" "$hz_version_ee" "$triggered_by" "$editions")
          echo "should_build_oss=${should_build_oss}" >> $GITHUB_OUTPUT

      - name: Check if EE should be built
        id: should_build_ee_step
        run: |
          . .github/workflows/build.functions.sh

          editions=${{ env.EDITIONS }}
          triggered_by=${{ env.EVENT_NAME }}
          
          should_build_ee=$(should_build_ee "$triggered_by" "$editions")
          echo "should_build_ee=${should_build_ee}" >> $GITHUB_OUTPUT

  deb-ee:
    if: needs.prepare.outputs.should_build_deb && needs.prepare.outputs.should_build_ee
    needs: [prepare]
    uses: ./.github/workflows/publish-deb-package.yml
    secrets: inherit
    with:
     HZ_VERSION: ${{ needs.prepare.outputs.hz_version_ee }}
     HZ_DISTRIBUTION: hazelcast-enterprise
     USE_TEST_REPO: ${{ needs.prepare.outputs.use_test_repo }}
  deb-oss:
    needs: [ prepare ]
    if: needs.prepare.outputs.should_build_deb && needs.prepare.outputs.should_build_oss
    uses: ./.github/workflows/publish-deb-package.yml
    secrets: inherit
    with:
      HZ_VERSION: ${{ needs.prepare.outputs.hz_version_oss }}
      HZ_DISTRIBUTION: hazelcast
      USE_TEST_REPO: ${{ needs.prepare.outputs.use_test_repo }}

  rpm-ee:
    if: needs.prepare.outputs.should_build_rpm && needs.prepare.outputs.should_build_ee
    needs: [prepare]
    uses: ./.github/workflows/publish-rpm-package.yml
    secrets: inherit
    with:
     HZ_VERSION: ${{ needs.prepare.outputs.hz_version_ee }}
     HZ_DISTRIBUTION: hazelcast-enterprise
     USE_TEST_REPO: ${{ needs.prepare.outputs.use_test_repo }}
  rpm-oss:
    needs: [ prepare ]
    if: needs.prepare.outputs.should_build_rpm && needs.prepare.outputs.should_build_oss
    uses: ./.github/workflows/publish-rpm-package.yml
    secrets: inherit
    with:
      HZ_VERSION: ${{ needs.prepare.outputs.hz_version_oss }}
      HZ_DISTRIBUTION: hazelcast
      USE_TEST_REPO: ${{ needs.prepare.outputs.use_test_repo }}

  brew-ee:
    if: needs.prepare.outputs.should_build_homebrew && needs.prepare.outputs.should_build_ee
    needs: [prepare]
    uses: ./.github/workflows/publish-brew-package.yml
    secrets: inherit
    with:
     HZ_VERSION: ${{ needs.prepare.outputs.hz_version_ee }}
     HZ_DISTRIBUTION: hazelcast-enterprise
     USE_TEST_REPO: ${{ needs.prepare.outputs.use_test_repo }}
  brew-oss:
    needs: [ prepare ]
    if: needs.prepare.outputs.should_build_homebrew && needs.prepare.outputs.should_build_oss
    uses: ./.github/workflows/publish-brew-package.yml
    secrets: inherit
    with:
      HZ_VERSION: ${{ needs.prepare.outputs.hz_version_oss }}
      HZ_DISTRIBUTION: hazelcast
      USE_TEST_REPO: ${{ needs.prepare.outputs.use_test_repo }}
