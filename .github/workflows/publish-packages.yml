name: Publish Hazelcast OS & EE packages

on:
  pull_request:
  workflow_dispatch:
    inputs:
      SOURCE_REF:
        description: 'The hazelcast-packaging branch to build the image from'
        required: true
      PACKAGE_TYPES:
        description: 'Packages to build'
        required: true
        type: choice
        options:
        - all
        - deb
        - rpm
        - homebrew
      RELEASE_TYPE:
        description: 'Which editions should be built'
        required: true
        type: choice
        options:
          - ALL
          - OSS
          - EE
      ENVIRONMENT:
        description: 'Environment to use'
        required: true
        type: choice
        options:
          - test
          - sandbox
          - live

env:
  EVENT_NAME: ${{ github.event_name }}
  RELEASE_TYPE_FILE: .github/release_type

concurrency:
  group: '${{ github.workflow }}-${{ github.base_ref || github.ref_name}}'

jobs:
  prepare:
    runs-on: ubuntu-latest
    env:
      RELEASE_TYPE: ${{ inputs.RELEASE_TYPE || 'EE' }}
      PACKAGE_TYPES: ${{ inputs.PACKAGE_TYPES || 'all' }}
    outputs:
      hz_version: ${{ steps.hz_version_step.outputs.hz_version }}
      should_build_oss: ${{ steps.resolve-editions.outputs.should_build_oss || github.event_name == 'pull_request' }}
      should_build_ee: ${{ steps.resolve-editions.outputs.should_build_ee || github.event_name == 'pull_request'}}
      should_build_deb: ${{ env.PACKAGE_TYPES == 'all' || env.PACKAGE_TYPES == 'deb' }}
      should_build_rpm: ${{ env.PACKAGE_TYPES == 'all' || env.PACKAGE_TYPES == 'rpm' }}
      should_build_homebrew: ${{ env.PACKAGE_TYPES == 'all' || env.PACKAGE_TYPES == 'homebrew' }}
      ENVIRONMENT: ${{ steps.environment.outputs.ENVIRONMENT }}
    steps:
      - uses: actions/checkout@v5

      - uses: actions/checkout@v5
        with:
          ref: ${{ inputs.SOURCE_REF }}
          path: source_path
          sparse-checkout: "**/pom.xml"
          sparse-checkout-cone-mode: false

      - name: Test scripts
        run: |
          ./test_scripts.sh

      - name: Set HZ_VERSION
        id: hz_version_step
        run: |
          echo "hz_version=$(mvn help:evaluate -Dexpression=project.version --file source_path --quiet -DforceStdout)" >> ${GITHUB_OUTPUT}

      - name: Forbid ${{ env.RELEASE_TYPE_FILE }} file in the PRs
        if: github.event_name == 'pull_request'
        run: |
          if [ -f "${{ env.RELEASE_TYPE_FILE }}" ]; then
            echo "Error: ${{ env.RELEASE_TYPE_FILE }} file is not allowed in the PRs. It's used only during release creation"
            exit 1
          fi

      - name: Read release type from the file
        run: |          
          if [ -f ${{ env.RELEASE_TYPE_FILE }} ]; then
              echo "RELEASE_TYPE=$(cat ${{ env.RELEASE_TYPE_FILE }})" >> $GITHUB_ENV
          else
              echo "File '${{ env.RELEASE_TYPE_FILE }}' does not exist."
          fi

      - id: resolve-editions
        uses: hazelcast/docker-actions/resolve-editions@master
        with:
          release-type: ${{ env.RELEASE_TYPE }}

      - name: Calculate the environment
        id: environment
        run: |
          ENVIRONMENT=${{ (env.EVENT_NAME == 'pull_request' && 'test') || inputs.ENVIRONMENT || 'live' }}
          echo "ENVIRONMENT=${ENVIRONMENT}" >> $GITHUB_OUTPUT

      - name: Add workflow inputs to summary
        run: |
          echo "### Workflow Setup" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Name | Value |" >> $GITHUB_STEP_SUMMARY
          echo "|------|-------|" >> $GITHUB_STEP_SUMMARY
          echo "| HZ_VERSION | ${{ steps.hz_version_step.outputs.hz_version }} |" >> $GITHUB_STEP_SUMMARY
          echo "| PACKAGE_TYPES | ${PACKAGE_TYPES} |" >> $GITHUB_STEP_SUMMARY
          echo "| RELEASE_TYPE | ${RELEASE_TYPE} |" >> $GITHUB_STEP_SUMMARY
          echo "| ENVIRONMENT | ${{ steps.environment.outputs.ENVIRONMENT }} |" >> $GITHUB_STEP_SUMMARY

  # Debian builds
  deb-ee:
    if: needs.prepare.outputs.should_build_deb == 'true' && needs.prepare.outputs.should_build_ee == 'yes'
    needs: [prepare]
    uses: ./.github/workflows/publish-deb-package.yml
    secrets: inherit
    with:
     SOURCE_REF: ${{ inputs.SOURCE_REF }}
     HZ_VERSION: ${{ needs.prepare.outputs.hz_version }}
     HZ_DISTRIBUTION: hazelcast-enterprise
     ENVIRONMENT: ${{ needs.prepare.outputs.ENVIRONMENT }}
  deb-oss:
    needs: [ prepare ]
    if: needs.prepare.outputs.should_build_deb == 'true' && needs.prepare.outputs.should_build_oss == 'yes'
    uses: ./.github/workflows/publish-deb-package.yml
    secrets: inherit
    with:
      SOURCE_REF: ${{ inputs.SOURCE_REF }}
      HZ_VERSION: ${{ needs.prepare.outputs.hz_version }}
      HZ_DISTRIBUTION: hazelcast
      ENVIRONMENT: ${{ needs.prepare.outputs.ENVIRONMENT }}
  # RPM builds
  rpm-ee:
    if: needs.prepare.outputs.should_build_rpm == 'true' && needs.prepare.outputs.should_build_ee == 'yes'
    needs: [prepare]
    uses: ./.github/workflows/publish-rpm-package.yml
    secrets: inherit
    with:
     SOURCE_REF: ${{ inputs.SOURCE_REF }}
     HZ_VERSION: ${{ needs.prepare.outputs.hz_version }}
     HZ_DISTRIBUTION: hazelcast-enterprise
     ENVIRONMENT: ${{ needs.prepare.outputs.ENVIRONMENT }}
  rpm-oss:
    needs: [ prepare ]
    if: needs.prepare.outputs.should_build_rpm == 'true' && needs.prepare.outputs.should_build_oss == 'yes'
    uses: ./.github/workflows/publish-rpm-package.yml
    secrets: inherit
    with:
      SOURCE_REF: ${{ inputs.SOURCE_REF }}
      HZ_VERSION: ${{ needs.prepare.outputs.hz_version }}
      HZ_DISTRIBUTION: hazelcast
      ENVIRONMENT: ${{ needs.prepare.outputs.ENVIRONMENT }}
  # Homebrew builds
  brew-ee:
    if: needs.prepare.outputs.should_build_homebrew == 'true' && needs.prepare.outputs.should_build_ee == 'yes'
    needs: [prepare]
    uses: ./.github/workflows/publish-brew-package.yml
    secrets: inherit
    with:
     SOURCE_REF: ${{ inputs.SOURCE_REF }}
     HZ_VERSION: ${{ needs.prepare.outputs.hz_version }}
     HZ_DISTRIBUTION: hazelcast-enterprise
     ENVIRONMENT: ${{ needs.prepare.outputs.ENVIRONMENT }}
  brew-oss:
    needs: [ prepare ]
    if: needs.prepare.outputs.should_build_homebrew == 'true' && needs.prepare.outputs.should_build_oss == 'yes' && !contains(needs.prepare.outputs.hz_version, 'SNAPSHOT')
    uses: ./.github/workflows/publish-brew-package.yml
    secrets: inherit
    with:
      SOURCE_REF: ${{ inputs.SOURCE_REF }}
      HZ_VERSION: ${{ needs.prepare.outputs.hz_version }}
      HZ_DISTRIBUTION: hazelcast
      ENVIRONMENT: ${{ needs.prepare.outputs.ENVIRONMENT }}
